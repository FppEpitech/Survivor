import { Provider, Type } from '@angular/core';
import { TranslocoLoader } from './transloco.loader';
import { TranslocoConfig } from './transloco.config';
import { TranslocoScope } from './types';
import { DefaultTranspiler } from './transloco.transpiler';
import { DefaultHandler } from './transloco-missing-handler';
import { DefaultInterceptor } from './transloco.interceptor';
import { DefaultFallbackStrategy } from './transloco-fallback-strategy';
export declare const defaultProviders: ({
    provide: import("@angular/core").InjectionToken<import("./transloco.transpiler").TranslocoTranspiler>;
    useClass: typeof DefaultTranspiler;
    deps: import("@angular/core").InjectionToken<TranslocoConfig>[];
} | {
    provide: import("@angular/core").InjectionToken<import("./transloco-missing-handler").TranslocoMissingHandlerData>;
    useClass: typeof DefaultHandler;
    deps?: undefined;
} | {
    provide: import("@angular/core").InjectionToken<import("./transloco.interceptor").TranslocoInterceptor>;
    useClass: typeof DefaultInterceptor;
    deps?: undefined;
} | {
    provide: import("@angular/core").InjectionToken<import("./transloco-fallback-strategy").TranslocoFallbackStrategy>;
    useClass: typeof DefaultFallbackStrategy;
    deps: import("@angular/core").InjectionToken<TranslocoConfig>[];
})[];
declare type TranslocoOptions = {
    config?: TranslocoConfig;
    loader?: Type<TranslocoLoader>;
};
export declare function provideTransloco(options: TranslocoOptions): Provider[];
export declare function provideTranslocoConfig(config: TranslocoConfig): {
    provide: import("@angular/core").InjectionToken<TranslocoConfig>;
    useValue: TranslocoConfig;
}[];
export declare function provideTranslocoLoader(loader: Type<TranslocoLoader>): {
    provide: import("@angular/core").InjectionToken<TranslocoLoader>;
    useClass: Type<TranslocoLoader>;
}[];
export declare function provideTranslocoScope(scope: TranslocoScope): {
    provide: import("@angular/core").InjectionToken<TranslocoScope>;
    useValue: TranslocoScope;
}[];
export {};
